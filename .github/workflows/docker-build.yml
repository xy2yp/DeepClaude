# 工作流名称
name: Docker Build

# 触发条件：推送到main分支或手动触发 
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:

  # 构建和推送Docker镜像的任务
  build:
#    needs: check-repository
#    if: needs.check-repository.outputs.is_original == 'true'
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    
    steps:
      # 检出代码
      - uses: actions/checkout@v4

      # 登录到 DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 设置小写变量
      - name: Set lowercase variables
        run: |
          OWNER_LOWER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          REPO_NAME_LOWER=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          echo "OWNER_LOWER=$OWNER_LOWER" >> $GITHUB_ENV
          echo "REPO_NAME_LOWER=$REPO_NAME_LOWER" >> $GITHUB_ENV

      # 设置 Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      # 构建并推送 Docker 镜像（添加id）
      - name: Build and push Docker image
        id: docker_build  # 添加的显式ID
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: xy2yp/deepclaude:latest

      # 发送 WXPusher 通知（修改判断逻辑）
      - name: Send WXPusher Notification
        if: always() # 保持原样
        env:
          WXPUSHER_APP_TOKEN: ${{ secrets.WXPUSHER_APP_TOKEN }}
          WXPUSHER_UID: ${{ secrets.WXPUSHER_UID }}
        run: |
          # 修改为使用 docker_build 步骤的状态判断
          if [[ "${{ steps.docker_build.outcome }}" == "success" ]]; then
            MESSAGE="✅ [GitHub Actions]\n DeepClaude 镜像构建成功！\n\n- 仓库：${{ github.repository }}\n- 分支：${{ github.ref_name }}\n- 镜像：xy2yp/DeepClaude:latest"
          else
            MESSAGE="❌ [GitHub Actions]\n DeepClaude 镜像构建失败，请检查日志。\n\n- 仓库：${{ github.repository }}\n- 分支：${{ github.ref_name }}"
          fi
        
          # 调用 WXPusher API 发送消息
          curl -s -X POST "https://wxpusher.zjiecode.com/api/send/message" \
            -H "Content-Type: application/json" \
            -d '{
              "appToken": "'"$WXPUSHER_APP_TOKEN"'",
              "content": "'"$MESSAGE"'",
              "summary": "DeepClaude 镜像构建通知",
              "contentType": 3,
              "uids": ["'"$WXPUSHER_UID"'"]
            }'
